{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7db860e0be4d06e3097560743e586157a7152fdecf58c8d2732e74e3378140d2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "838830",
    "logsBloom": "0x
    "blockHash": "0x0066f3e69840c7e46db37db811d1b382f93f6a24e0197a68f2a32e7f3301d75d",
    "transactionHash": "0x7db860e0be4d06e3097560743e586157a7152fdecf58c8d2732e74e3378140d2",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "838830",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "225c2df42f6e685ae025c787d24d3bff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport './PriceConverter.sol';\\r\\nimport '@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol';\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n\\tusing PriceConverter for uint256;\\r\\n\\tAggregatorV3Interface priceFeed;\\r\\n\\r\\n\\tmapping(address => uint256) public addressToAmountFunded;\\r\\n\\taddress[] public funders;\\r\\n\\r\\n\\t// Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n\\taddress public owner;\\r\\n\\tuint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n\\r\\n\\tconstructor(address priceFeedAddress) {\\r\\n\\t\\towner = msg.sender;\\r\\n\\t\\tpriceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction fund() public payable {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tmsg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\r\\n\\t\\t\\t'You need to spend more ETH!'\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\taddressToAmountFunded[msg.sender] += msg.value;\\r\\n\\t\\tfunders.push(msg.sender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getVersion() public view returns (uint256) {\\r\\n\\t\\t// ETH/USD price feed address of Sepolia Network.\\r\\n\\t\\treturn priceFeed.version();\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\t// require(msg.sender == owner);\\r\\n\\t\\tif (msg.sender != owner) revert NotOwner();\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() public onlyOwner {\\r\\n\\t\\tfor (\\r\\n\\t\\t\\tuint256 funderIndex = 0;\\r\\n\\t\\t\\tfunderIndex < funders.length;\\r\\n\\t\\t\\tfunderIndex++\\r\\n\\t\\t) {\\r\\n\\t\\t\\taddress funder = funders[funderIndex];\\r\\n\\t\\t\\taddressToAmountFunded[funder] = 0;\\r\\n\\t\\t}\\r\\n\\t\\tfunders = new address[](0);\\r\\n\\r\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\r\\n\\t\\t\\tvalue: address(this).balance\\r\\n\\t\\t}('');\\r\\n\\t\\trequire(callSuccess, 'Call failed');\\r\\n\\t}\\r\\n\\r\\n\\tfallback() external payable {\\r\\n\\t\\tfund();\\r\\n\\t}\\r\\n\\r\\n\\treceive() external payable {\\r\\n\\t\\tfund();\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x3bc1fd41d8485562a05fd137f5dd17cb1e4a2adee2940dc94b9af46ca6f1eeaf\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\nimport '@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol';\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\t// 1000000000\\r\\n\\tfunction getConversionRate(\\r\\n\\t\\tuint256 ethAmount,\\r\\n\\t\\tAggregatorV3Interface priceFeed\\r\\n\\t) internal view returns (uint256) {\\r\\n\\t\\t(, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n\\t\\tuint256 ethPrice = uint256(answer * 10000000000);\\r\\n\\t\\tuint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n\\t\\t// or (Both will do the same thing)\\r\\n\\t\\t// uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n\\t\\t// the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n\\t\\treturn ethAmountInUsd;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x0da1647d541361bdaf8ff4ced2028b6cfcb76c8d8a0767fd37de404c43239a96\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610eb7380380610eb78339818101604052810190610032919061011c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610d5f806101586000396000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b6040516100af91906107bc565b60405180910390f35b3480156100c457600080fd5b506100cd610379565b005b3480156100db57600080fd5b506100f660048036038101906100f1919061083a565b6105b6565b60405161010391906107bc565b60405180910390f35b34801561011857600080fd5b506101216105ce565b60405161012e91906107bc565b60405180910390f35b34801561014357600080fd5b5061014c6105db565b6040516101599190610876565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108bd565b610601565b6040516101a09190610876565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064090919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610947565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102769190610996565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037491906109df565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610400576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104a65760006002828154811061042657610425610a0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610403565b50600067ffffffffffffffff8111156104c2576104c1610a3b565b5b6040519080825280602002602001820160405280156104f05781602001602082028036833780820191505090505b50600290805190602001906105069291906106fc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052d90610a9b565b60006040518083038185875af1925050503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b50509050806105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90610afc565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061061157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610b94565b50505091505060006402540be400826106cb9190610c0f565b90506000670de0b6b3a764000086836106e49190610c87565b6106ee9190610cf8565b905080935050505092915050565b828054828255906000526020600020908101928215610775579160200282015b828111156107745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061071c565b5b5090506107829190610786565b5090565b5b8082111561079f576000816000905550600101610787565b5090565b6000819050919050565b6107b6816107a3565b82525050565b60006020820190506107d160008301846107ad565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610807826107dc565b9050919050565b610817816107fc565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b6000602082840312156108505761084f6107d7565b5b600061085e84828501610825565b91505092915050565b610870816107fc565b82525050565b600060208201905061088b6000830184610867565b92915050565b61089a816107a3565b81146108a557600080fd5b50565b6000813590506108b781610891565b92915050565b6000602082840312156108d3576108d26107d7565b5b60006108e1848285016108a8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610931601b836108ea565b915061093c826108fb565b602082019050919050565b6000602082019050818103600083015261096081610924565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a1826107a3565b91506109ac836107a3565b92508282019050808211156109c4576109c3610967565b5b92915050565b6000815190506109d981610891565b92915050565b6000602082840312156109f5576109f46107d7565b5b6000610a03848285016109ca565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a85600083610a6a565b9150610a9082610a75565b600082019050919050565b6000610aa682610a78565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ae6600b836108ea565b9150610af182610ab0565b602082019050919050565b60006020820190508181036000830152610b1581610ad9565b9050919050565b600069ffffffffffffffffffff82169050919050565b610b3b81610b1c565b8114610b4657600080fd5b50565b600081519050610b5881610b32565b92915050565b6000819050919050565b610b7181610b5e565b8114610b7c57600080fd5b50565b600081519050610b8e81610b68565b92915050565b600080600080600060a08688031215610bb057610baf6107d7565b5b6000610bbe88828901610b49565b9550506020610bcf88828901610b7f565b9450506040610be0888289016109ca565b9350506060610bf1888289016109ca565b9250506080610c0288828901610b49565b9150509295509295909350565b6000610c1a82610b5e565b9150610c2583610b5e565b9250828202610c3381610b5e565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c6b57610c6a610967565b5b8282058414831517610c8057610c7f610967565b5b5092915050565b6000610c92826107a3565b9150610c9d836107a3565b9250828202610cab816107a3565b91508282048414831517610cc257610cc1610967565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d03826107a3565b9150610d0e836107a3565b925082610d1e57610d1d610cc9565b5b82820490509291505056fea2646970667358221220a1311f8426e02ce41dcec665ccfe2ab167e1d0ec6f0ada24aa624404f127ba3964736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b6040516100af91906107bc565b60405180910390f35b3480156100c457600080fd5b506100cd610379565b005b3480156100db57600080fd5b506100f660048036038101906100f1919061083a565b6105b6565b60405161010391906107bc565b60405180910390f35b34801561011857600080fd5b506101216105ce565b60405161012e91906107bc565b60405180910390f35b34801561014357600080fd5b5061014c6105db565b6040516101599190610876565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108bd565b610601565b6040516101a09190610876565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064090919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610947565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102769190610996565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037491906109df565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610400576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104a65760006002828154811061042657610425610a0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610403565b50600067ffffffffffffffff8111156104c2576104c1610a3b565b5b6040519080825280602002602001820160405280156104f05781602001602082028036833780820191505090505b50600290805190602001906105069291906106fc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052d90610a9b565b60006040518083038185875af1925050503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b50509050806105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90610afc565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061061157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610b94565b50505091505060006402540be400826106cb9190610c0f565b90506000670de0b6b3a764000086836106e49190610c87565b6106ee9190610cf8565b905080935050505092915050565b828054828255906000526020600020908101928215610775579160200282015b828111156107745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061071c565b5b5090506107829190610786565b5090565b5b8082111561079f576000816000905550600101610787565b5090565b6000819050919050565b6107b6816107a3565b82525050565b60006020820190506107d160008301846107ad565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610807826107dc565b9050919050565b610817816107fc565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b6000602082840312156108505761084f6107d7565b5b600061085e84828501610825565b91505092915050565b610870816107fc565b82525050565b600060208201905061088b6000830184610867565b92915050565b61089a816107a3565b81146108a557600080fd5b50565b6000813590506108b781610891565b92915050565b6000602082840312156108d3576108d26107d7565b5b60006108e1848285016108a8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610931601b836108ea565b915061093c826108fb565b602082019050919050565b6000602082019050818103600083015261096081610924565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a1826107a3565b91506109ac836107a3565b92508282019050808211156109c4576109c3610967565b5b92915050565b6000815190506109d981610891565b92915050565b6000602082840312156109f5576109f46107d7565b5b6000610a03848285016109ca565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a85600083610a6a565b9150610a9082610a75565b600082019050919050565b6000610aa682610a78565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ae6600b836108ea565b9150610af182610ab0565b602082019050919050565b60006020820190508181036000830152610b1581610ad9565b9050919050565b600069ffffffffffffffffffff82169050919050565b610b3b81610b1c565b8114610b4657600080fd5b50565b600081519050610b5881610b32565b92915050565b6000819050919050565b610b7181610b5e565b8114610b7c57600080fd5b50565b600081519050610b8e81610b68565b92915050565b600080600080600060a08688031215610bb057610baf6107d7565b5b6000610bbe88828901610b49565b9550506020610bcf88828901610b7f565b9450506040610be0888289016109ca565b9350506060610bf1888289016109ca565b9250506080610c0288828901610b49565b9150509295509295909350565b6000610c1a82610b5e565b9150610c2583610b5e565b9250828202610c3381610b5e565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c6b57610c6a610967565b5b8282058414831517610c8057610c7f610967565b5b5092915050565b6000610c92826107a3565b9150610c9d836107a3565b9250828202610cab816107a3565b91508282048414831517610cc257610cc1610967565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d03826107a3565b9150610d0e836107a3565b925082610d1e57610d1d610cc9565b5b82820490509291505056fea2646970667358221220a1311f8426e02ce41dcec665ccfe2ab167e1d0ec6f0ada24aa624404f127ba3964736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}